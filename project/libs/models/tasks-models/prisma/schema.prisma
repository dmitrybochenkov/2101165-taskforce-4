// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output = "../../../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Task {
  taskId      Int      @id @default(autoincrement()) @map("task_id")
  title       String   @default("")
  description String   @default("")
  category    Category @relation(fields: [categoryId], references: [categoryId])
  categoryId  Int
  price       Int   
  tillDate    String   @default("") @map("till_date")
  picture     String   @default("")
  address     String   @default("")
  tags        Tag[]
  city        String   @default("")
  userId      String?  @default("") @map("user_id")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  comments    Comment[]
  @@map("tasks")
}

model Category {
  categoryId Int    @id @default(autoincrement()) @map("category_id")
  title      String @unique
  tasks      Task[]
  @@map("categories")
}

model Comment {
  commentId Int      @id @default(autoincrement()) @map("comment_id")
  message   String
  userId    String?      @map("user_id")
  task      Task     @relation(fields: [taskId], references: [taskId], onDelete: Cascade, onUpdate: Cascade)
  taskId    Int      @map("task_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  @@map("comments")
}

model Tag {
  tagId     Int      @id @default(autoincrement()) @map("tag_id")
  title     String
  task      Task     @relation(fields: [taskId], references: [taskId], onDelete: Cascade, onUpdate: Cascade)
  taskId    Int      @map("task_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  @@map("tags")
}
